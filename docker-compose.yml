version: '3.8'

services:

  # ü¶ì Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  # ü¶í Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  # üêò PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: spark
      POSTGRES_PASSWORD: spark123
      POSTGRES_DB: sparkdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # üöÄ Producer (Scala + Kafka)
  producer:
    build: ./producer
    depends_on:
      - kafka
    volumes:
      - ./data/dataset_stock:/data/dataset_stock

  # üî• Consumer (Scala + Spark)
  consumer:
    build: ./consumer
    container_name: consumer
    depends_on:
      - kafka
      - postgres
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/sparkdb
      DB_USER: spark
      DB_PASSWORD: spark123
    # pas besoin de volume ici, le jar est d√©j√† inclus dans l'image

  # üìä Streamlit Dashboard
  streamlit:
    build: ./streamlit
    container_name: streamlit
    ports:
      - "8501:8501"
    depends_on:
      - postgres

  # üõ†Ô∏è Kafka CLI pour debug
  kafka-cli:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-cli
    depends_on:
      - kafka
    entrypoint: [ "/bin/sh", "-c", "sleep infinity" ]

volumes:
  pgdata:
